#version 410

layout(location=0) in vec4 Position;
layout(location=1) in vec4 Normal;
layout(location=2) in vec2 TexCoord;
layout(location=3) in vec4 Tangent;
layout(location=4) in vec4 Weights;
layout(location=5) in vec4 Indices;

out vec2 vTexCoord;
out vec4 vNormal;
out vec4 vPosition;
out vec4 vTangent;
out vec4 vBiTangent;
out vec4 vShadowCoord;

uniform mat4 ProjectionView;
uniform mat4 LightMatrix;
uniform mat4 Transform;

const int MAX_BONES = 128;
uniform mat4 bones[MAX_BONES];

uniform sampler2D perlin_texture;
uniform float height;
uniform vec2 texcoord;
//uniform float waterHeight;

void main()
{
	vTexCoord = TexCoord;
	vNormal = Normal;
	vPosition = Transform * Position;
	vTangent = Tangent;
	vBiTangent = vec4(cross(Normal.xyz, Tangent.xyz), 1);
	
	ivec4 index = ivec4(Indices);
	
	vec4 P = bones[index.x] * Position * Weights.x;
	P += bones[index.y] * Position * Weights.y;
	P += bones[index.z] * Position * Weights.z;
	P += bones[index.w] * Position * Weights.w;
	
	P = Transform * P;
	P.y += texture(perlin_texture, texcoord).r * height;
	
	gl_Position = ProjectionView * P;
	
	vShadowCoord = LightMatrix * P;
}